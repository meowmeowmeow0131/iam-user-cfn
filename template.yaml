AWSTemplateFormatVersion: "2010-09-09"
Description:
  IAM User for cloudformation

# ------------------------------------------------------------#
# Input Console
# ------------------------------------------------------------#
Metadata:
  AWS::CloudFormation::Interface:
    # パラメータグループ
    ParameterGroups:
      - Label:
          default: Name Prefix
        Parameters:
          - CompanyPrefix
          - PJPrefix
      - Label:
          default: Environment
        Parameters:
          - Environment
      - Label:
          default: IAM Configuration
        Parameters:
          - AwsServiceName
          - IAMUserPassword
          - IAMAdminPassword
    # パラメータラベル
    ParameterLabels:
      AwsServiceName:
        default: AWS Service Name
      IAMUserPassword:
        default: IAM Readonly User's Password
      IAMAdminPassword:
        default: IAM Readonly Admin's Password

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  # common parameters
  CompanyPrefix:
    Type: String
  PJPrefix:
    Type: String
  Environment:
    Type: String
    AllowedValues:
      - prd
      - stg
      - demo

  # IAM
  AwsServiceName:
    Type: String
  IAMUserPassword:
    NoEcho: 'true'
    Type: String
    MinLength: '1'
    MaxLength: '41'
    ConstraintDescription: the password must be between 1 and 41 characters
  IAMAdminPassword:
    NoEcho: 'true'
    Type: String
    MinLength: '1'
    MaxLength: '41'
    ConstraintDescription: the password must be between 1 and 41 characters

  # Sercret Manager
  KmsKeyId:
    Type: String

Conditions:
# ------------------------------------------------------------#
# 
# ------------------------------------------------------------#
  UseKmsKey: !Not [!Equals [!Ref KmsKeyId, ""]]

Resources:
# ------------------------------------------------------------#
# IAM Assume (only user)
# ------------------------------------------------------------#
  IAMAssumePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${AwsServiceName}-Assume-IAMPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AssumeRole
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${AwsServiceName}-IAMRole
      Path: /

  IAMAssumeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AwsServiceName}-Assume-IAMRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt IAMUser.Arn
            Action:
              - sts:AssumeRole
      Path: /
      MaxSessionDuration: 3600
    DependsOn: IAMUser

# ------------------------------------------------------------#
# IAM User
# ------------------------------------------------------------#
  IAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub ${AwsServiceName}-user
      LoginProfile:
        Password: !Ref IAMUserPassword
      ManagedPolicyArns:
        - !Ref IAMAssumePolicy

  IAMAdmin:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub ${AwsServiceName}-admin
      LoginProfile:
        Password: !Ref IAMAdminPassword

# ------------------------------------------------------------#
# IAM User GroupAddition
# ------------------------------------------------------------#
  Users:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: {"Fn::ImportValue": !Sub "${AwsServiceName}-user-group"}
      Users:
        - !Ref IAMUser

  Admins:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: {"Fn::ImportValue": !Sub "${AwsServiceName}-admin-group"}
      Users:
        - !Ref IAMAdmin

# ------------------------------------------------------------#
# IAM AccessKey
# ------------------------------------------------------------#
  IAMUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref IAMUser

  IAMAdminAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref IAMAdmin

# ------------------------------------------------------------#
# IAM Credential and IAM Role Config Retain (only admin)
# ------------------------------------------------------------#
  IAMAdminCredential:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${AwsServiceName}-admin-credential
      KmsKeyId: !If [UseKmsKey, !Ref KmsKeyId, !Ref "AWS::NoValue"]
      SecretString: !Sub |
        [${AwsServiceName}-admin]
        aws_access_key_id = ${IAMAdminAccessKey}
        aws_secret_access_key = ${IAMAdminAccessKey.SecretAccessKey}

  IAMAdminRoleConfig:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: !Sub |
        [profile ${IAMAssumeRole}]
        role_arn = ${IAMAssumeRole.Arn}
        source_profile = ${AwsServiceName}-user

Outputs:
# ------------------------------------------------------------#
# Arn Infomation
# ------------------------------------------------------------#
  IAMUserUserName:
    Description: '-'
    Value: !Sub ${AwsServiceName}-user
  IAMAdminUserName:
    Description: '-'
    Value: !Sub ${AwsServiceName}-admin

# ------------------------------------------------------------#
# IAM User Infomation
# ------------------------------------------------------------#
  IAMUserLoginUrl:
    Description: '-'
    Value: !Join
      - ''
      - - 'https://'
        - !Ref AWS::AccountId
        - '.signin.aws.amazon.com/console'
  IAMUserPasswordSettingUrl:
    Description: '-'
    Value: !Join
      - ''
      - - 'https://console.aws.amazon.com/iam/home?region='
        - !Ref AWS::Region
        - '#/users/'
        - !Sub ${AwsServiceName}-user
        - '?section=security_credentials'

# ------------------------------------------------------------#
# IAM User AccessKey Infomation
# ------------------------------------------------------------#
  IAMUserAccessKey:
    Description: Please 
    Value: !Ref IAMUserAccessKey
  IAMAdminAccessKey:
    Description: Please set credential file.
    Value: !Sub |
      aws secretsmanager get-secret-value --secret-id ${IAMAdminCredential} --query 'SecretString' --output text >> ~/.aws/credentials  
  IAMUserSecretKey:
    Description: '-'
    Value: !GetAtt IAMUserAccessKey.SecretAccessKey
  IAMAdminSecretKey:
    Description: Please set config file.
    Value: !Sub |
      aws ssm get-parameters --names ${IAMAdminRoleConfig} --query 'Parameters[].Value' --output text >> ~/.aws/config

# ------------------------------------------------------------#
# IAM User Switch Infomation
# ------------------------------------------------------------#
  IAMUserSwitchRole:
    Value: !Sub |
      aws sts get-caller-identity --profile ${IAMUser}
      aws sts get-caller-identity --profile ${IAMAssumeRole}
